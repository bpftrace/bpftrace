FROM ubuntu:focal

ARG LLVM_VERSION
ENV LLVM_VERSION=$LLVM_VERSION

RUN apt-get update && apt-get install -y curl gnupg &&\
    llvmRepository="\n\
deb http://apt.llvm.org/focal/ llvm-toolchain-focal main\n\
deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main\n\
deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${LLVM_VERSION} main\n\
deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-${LLVM_VERSION} main\n" &&\
    echo $llvmRepository >> /etc/apt/sources.list && \
    curl -L https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD

RUN curl -L --output /tmp/cmake.tar.gz \
  https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-linux-x86_64.tar.gz \
  && tar -xf /tmp/cmake.tar.gz -C /usr/local/ --strip-components=1

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
      make \
      pkg-config \
      asciidoctor \
      bison \
      binutils-dev \
      flex \
      g++ \
      git \
      kmod \
      libelf-dev \
      zlib1g-dev \
      libbpfcc-dev \
      libcereal-dev \
      libdw-dev \
      libpcap-dev \
      clang-${LLVM_VERSION} \
      libclang-${LLVM_VERSION}-dev \
      libclang-common-${LLVM_VERSION}-dev \
      libclang1-${LLVM_VERSION} \
      llvm-${LLVM_VERSION} \
      llvm-${LLVM_VERSION}-dev \
      llvm-${LLVM_VERSION}-runtime \
      libllvm${LLVM_VERSION} \
      nftables \
      systemtap-sdt-dev \
      python3 \
      python3-distutils \
      xxd \
      libssl-dev

# linux-tools on Ubuntu is versioned per-kernel but in reality we can just pull
# bpftool from any release and we'll be fine. That said, try the exact kernel
# release first just in case the host is running Ubuntu.
RUN apt-get install -y linux-tools-$(uname -r) 2>/dev/null || apt-get install -y linux-tools-5.15.0-50-generic
RUN /sbin/bpftool &>/dev/null || (rm -f /sbin/bpftool && ln -s /usr/lib/linux-tools/5.15.0-50-generic/bpftool /sbin/bpftool && bpftool)

RUN if [ "$LLVM_VERSION" -ge 13 ] ; then apt-get install -y libmlir-${LLVM_VERSION}-dev ; fi

RUN if [ "$LLVM_VERSION" -ge 14 ] ; then \
      apt download libpolly-${LLVM_VERSION}-dev && \
      dpkg --force-all -i libpolly-${LLVM_VERSION}-dev*.deb ; \
    fi

RUN ln -s /usr/bin/python3 /usr/bin/python
COPY build.sh /build.sh
RUN chmod 755 /build.sh
ENTRYPOINT ["bash", "/build.sh"]
