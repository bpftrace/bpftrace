ARG BUILDER_IMAGE=debian:bullseye
ARG BASE_IMAGE=debian:bullseye
ARG LLVM=ghcr.io/iovisor/llvm
FROM ${LLVM} as llvm
FROM --platform=${BUILDPLATFORM} ${BUILDER_IMAGE} as builder
ARG LLVM_VERSION=12
ARG BUILD_TYPE=Release
ARG TARGETARCH
ARG BUILDARCH

ENV DEBIAN_FRONTEND=noninteractive

ENV TARGETARCH=${TARGETARCH}
ENV BUILDARCH=${BUILDARCH}

COPY --from=llvm /usr/local /usr/local

RUN if [ "${TARGETARCH}" != "${BUILDARCH}" ]; then \
    PACKAGEARCH="${TARGETARCH}"; \
    if [ "${TARGETARCH}" = 'ppc64le' ]; then \
      PACKAGEARCH='ppc64el'; \
    fi; \
    dpkg --add-architecture ${PACKAGEARCH}; \
  fi \
  && apt-get update \
  && apt-get install -y \
    bison \
    cmake \
    flex \
    libcereal-dev:${PACKAGEARCH} \
    libelf-dev:${PACKAGEARCH} \
    libiberty-dev:${PACKAGEARCH} \
    make \
    pkg-config \
  && if [ "${TARGETARCH}" == "${BUILDARCH}" ]; then \
    apt-get install -y gcc g++; \
  elif [ "${TARGETARCH}" = 'arm64' ]; then \
    apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu; \
  elif [ "${TARGETARCH}" = 'ppc64le' ]; then \
    apt-get install -y gcc-powerpc64le-linux-gnu g++-powerpc64le-linux-gnu; \
  elif [ "${TARGETARCH}" = 'amd64' ]; then \
    apt-get install -y gcc-x86-64-linux-gnu g++-x86-64-linux-gnu; \
  else \
    echo "${TARGETARCH} is not supported" 1>&2; \
    exit 1;\
  fi

COPY ./ /bpftrace

RUN mkdir /bpftrace/build \
  && cd /bpftrace/build \
  && if [ "${TARGETARCH}" = 'arm64' -a "${BUILDARCH}" != 'arm64' ]; then \
    export CC=aarch64-linux-gnu-gcc; \
    export AR=aarch64-linux-gnu-ar; \
    export CXX=aarch64-linux-gnu-g++; \
  elif [ "${TARGETARCH}" = 'ppc64le' -a "${BUILDARCH}" != 'ppc64le' ]; then \
    export CC=powerpc64le-linux-gnu-gcc; \
    export AR=powerpc64le-linux-gnu-ar; \
    export CXX=powerpc64le-linux-gnu-g++; \
  elif [ "${TARGETARCH}" = 'amd64' -a "${BUILDARCH}" != 'amd64' ]; then \
    export CC=x86_64-linux-gnu-gcc; \
    export AR=x86_64-linux-gnu-ar; \
    export CXX=x86_64-linux-gnu-g++; \
  fi \
  && bash /bpftrace/build-libs.sh \
  && cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
    -DSTATIC_LINKING:BOOL=ON \
    -DEMBED_USE_LLVM:BOOL=ON \
    -DEMBED_BUILD_LLVM:BOOL=OFF \
    -DEMBED_LLVM_VERSION=${LLVM_VERSION} \
    -DALLOW_UNSAFE_PROBE:BOOL=OFF \
    -DBUILD_TESTING:BOOL=OFF \
    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
    -DENABLE_SKB_OUTPUT:BOOL=OFF \
    ../ \
  && make -j$(nproc)

FROM ${BASE_IMAGE}
COPY --from=builder /bpftrace/build/src/bpftrace /usr/bin/bpftrace
