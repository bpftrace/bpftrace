#!/usr/bin/env bpftrace
// capable	Trace security capability checks (cap_capable()).
// 		For Linux, uses bpftrace and eBPF.
// Example of usage:
// # ./capable.bt
// TIME      UID    PID    COMM             CAP  NAME                 AUDIT
// 22:11:23  114    2676   snmpd            12   CAP_NET_ADMIN        1
// 22:11:23  0      6990   run              24   CAP_SYS_RESOURCE     1
// 22:11:23  0      7003   chmod            3    CAP_FOWNER           1
// 22:11:23  0      7003   chmod            4    CAP_FSETID           1
// 22:11:23  0      7005   chmod            4    CAP_FSETID           1
// [...]
// This can be useful for general debugging, and also security enforcement:
// determining a whitelist of capabilities an application needs.
// The output above includes various capability checks: snmpd checking
// CAP_NET_ADMIN, run checking CAP_SYS_RESOURCES, then some short-lived processes
// checking CAP_FOWNER, CAP_FSETID, etc.
// To see what each of these capabilities does, check the capabilities(7) man
// page and the kernel source.
// This is a bpftrace version of the bcc tool of the same name.
// The bcc version provides options to customize the output.
// Copyright 2018 Netflix, Inc.
// 08-Sep-2018	Brendan Gregg	Created this.

BEGIN {
  printf("Tracing cap_capable syscalls... Hit Ctrl-C to end.\n");
  printf("%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\n",
         "TIME",
         "UID",
         "PID",
         "COMM",
         "CAP",
         "NAME");
  @cap = "CAP_CHOWN";
  @cap = "CAP_DAC_OVERRIDE";
  @cap = "CAP_DAC_READ_SEARCH";
  @cap = "CAP_FOWNER";
  @cap = "CAP_FSETID";
  @cap = "CAP_KILL";
  @cap = "CAP_SETGID";
  @cap = "CAP_SETUID";
  @cap = "CAP_SETPCAP";
  @cap = "CAP_LINUX_IMMUTABLE";
  @cap = "CAP_NET_BIND_SERVICE";
  @cap = "CAP_NET_BROADCAST";
  @cap = "CAP_NET_ADMIN";
  @cap = "CAP_NET_RAW";
  @cap = "CAP_IPC_LOCK";
  @cap = "CAP_IPC_OWNER";
  @cap = "CAP_SYS_MODULE";
  @cap = "CAP_SYS_RAWIO";
  @cap = "CAP_SYS_CHROOT";
  @cap = "CAP_SYS_PTRACE";
  @cap = "CAP_SYS_PACCT";
  @cap = "CAP_SYS_ADMIN";
  @cap = "CAP_SYS_BOOT";
  @cap = "CAP_SYS_NICE";
  @cap = "CAP_SYS_RESOURCE";
  @cap = "CAP_SYS_TIME";
  @cap = "CAP_SYS_TTY_CONFIG";
  @cap = "CAP_MKNOD";
  @cap = "CAP_LEASE";
  @cap = "CAP_AUDIT_WRITE";
  @cap = "CAP_AUDIT_CONTROL";
  @cap = "CAP_SETFCAP";
  @cap = "CAP_MAC_OVERRIDE";
  @cap = "CAP_MAC_ADMIN";
  @cap = "CAP_SYSLOG";
  @cap = "CAP_WAKE_ALARM";
  @cap = "CAP_BLOCK_SUSPEND";
  @cap = "CAP_AUDIT_READ";
  @cap = "CAP_PERFMON";
  @cap = "CAP_BPF";
  @cap = "CAP_CHECKPOINT_RESTORE";
}

kprobe:cap_capable {
  $cap = arg2;
  $audit = arg3;
  time("%H:%M:%S  ");
  printf("%-6d %-6d %-16s %-4d %-20s %d\n", uid, pid, comm, $cap, @cap[$cap], $audit);
}

END {
  clear(@cap);
}
