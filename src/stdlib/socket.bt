// Retrieve the cookie (generated by the kernel) of the socket.
//
// :param (struct sock*) $sk: The socket to load the cookie from
// :last_expr (u64): The cookie value
//
// If no cookie has been set yet, generate a new cookie. Once generated, the socket cookie remains stable for the life of the socket.
//
// This function returns a `uint64` unique number on success, or 0 if **sk** is NULL.
//
// ```
// fentry:tcp_rcv_established
// {
//   $cookie = socket_cookie(args->sk);
//   @psize[$cookie] = hist(args->skb->len);
// }
// ```
//
// Prints:
//
// ```
// @psize[65551]:
// [32, 64)               4 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|
//
// @psize[504]:
// [32, 64)               4 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|
// [64, 128)              1 |@@@@@@@@@@@@@                                       |
// [128, 256)             0 |                                                    |
// [256, 512)             1 |@@@@@@@@@@@@@                                       |
// [512, 1K)              0 |                                                    |
// [1K, 2K)               0 |                                                    |
// [2K, 4K)               1 |@@@@@@@@@@@@@                                       |
// ```
macro socket_cookie($sk) {
  __bpf_socket_cookie($sk)
}
